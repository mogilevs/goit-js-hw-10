{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet userSelectedDate;\nconst btn = document.querySelector('button');\nbtn.disabled = 'true';\nconst spans = document.querySelectorAll('.value');\nconst days = spans[0];\nconst hours = spans[1];\nconst minutes = spans[2];\nconst seconds = spans[3];\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.show({\n    position: 'topCenter', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center,\n    message: 'Please choose a date in the future'\n});\n      btn.disabled = 'true';\n      return;\n    } else {\n      userSelectedDate = selectedDates[0];\n      btn.removeAttribute('disabled');\n    }\n  },\n};\nconst input = document.querySelector('#datetime-picker');\nconst fp = flatpickr(input, options);\n\nbtn.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  const intervalId = setInterval(timer, 1000);\n  function timer() {\n    let period = userSelectedDate - Date.now();\n    if (period > 0) {\n      let remainingTime = convertMs(period);\n      days.textContent = addZero(remainingTime.days);\n      hours.textContent = addZero(remainingTime.hours);\n      minutes.textContent = addZero(remainingTime.minutes);\n      seconds.textContent = addZero(remainingTime.seconds);\n      btn.disabled = 'true';\n      input.disabled = 'true';\n    } else {\n      clearInterval(intervalId);\n      btn.removeAttribute('disabled');\n      input.removeAttribute('disabled');\n    }\n  }\n}\n\nfunction addZero(value) {\n  const str = String(value);\n  return str.padStart(2, '0');\n}\n"],"names":["convertMs","ms","days","hours","minutes","seconds","userSelectedDate","btn","spans","options","selectedDates","iziToast","input","flatpickr","startTimer","intervalId","timer","period","remainingTime","addZero","value"],"mappings":"+IAKA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIC,EACJ,MAAMC,EAAM,SAAS,cAAc,QAAQ,EAC3CA,EAAI,SAAW,OACf,MAAMC,EAAQ,SAAS,iBAAiB,QAAQ,EAC1CN,EAAOM,EAAM,CAAC,EACdL,EAAQK,EAAM,CAAC,EACfJ,EAAUI,EAAM,CAAC,EACjBH,EAAUG,EAAM,CAAC,EAEjBC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CACjCC,EAAS,KAAK,CAChB,SAAU,YACV,QAAS,oCACb,CAAC,EACKJ,EAAI,SAAW,OACf,MACN,MACMD,EAAmBI,EAAc,CAAC,EAClCH,EAAI,gBAAgB,UAAU,CAEjC,CACH,EACMK,EAAQ,SAAS,cAAc,kBAAkB,EAC5CC,EAAUD,EAAOH,CAAO,EAEnCF,EAAI,iBAAiB,QAASO,CAAU,EAExC,SAASA,GAAa,CACpB,MAAMC,EAAa,YAAYC,EAAO,GAAI,EAC1C,SAASA,GAAQ,CACf,IAAIC,EAASX,EAAmB,KAAK,IAAG,EACxC,GAAIW,EAAS,EAAG,CACd,IAAIC,EAAgBlB,EAAUiB,CAAM,EACpCf,EAAK,YAAciB,EAAQD,EAAc,IAAI,EAC7Cf,EAAM,YAAcgB,EAAQD,EAAc,KAAK,EAC/Cd,EAAQ,YAAce,EAAQD,EAAc,OAAO,EACnDb,EAAQ,YAAcc,EAAQD,EAAc,OAAO,EACnDX,EAAI,SAAW,OACfK,EAAM,SAAW,MACvB,MACM,cAAcG,CAAU,EACxBR,EAAI,gBAAgB,UAAU,EAC9BK,EAAM,gBAAgB,UAAU,CAEnC,CACH,CAEA,SAASO,EAAQC,EAAO,CAEtB,OADY,OAAOA,CAAK,EACb,SAAS,EAAG,GAAG,CAC5B"}